class Solution {
    
    
public:
    bool isInterleave(string s1, string s2, string s3) {

        if(s1.size() + s2.size() != s3.size()) return false;
        if(s1.size()==0 && s2.size()==0 && s3.size() == 0) return true;
        
        if(s1.size()==0 ) return s3==s2;
        if(s2.size()==0 ) return s3==s1;
        
        vector<vector<bool> > v(s1.size()+1,vector<bool>(s2.size()+1,false));
        
        v[0][0] = false;
        for(int i=1; i<=s1.size(); i++){
            v[i][0] = (s1[i-1] == s3[i-1]);
            if(!v[i][0]) break;
        }
        
        for(int i=1; i<=s2.size(); i++){
            v[0][i] = s2[i-1] == s3[i-1];
            if(!v[0][i]) break;
        }
        
        for(int i=1; i<=s1.size(); i++){
            for(int j=1; j<=s2.size(); j++){
                v[i][j] = (v[i-1][j] && s1[i-1] == s3[i+j-1])
                    ||(v[i][j-1] && s2[j-1] == s3[i+j-1]) ;
            }
        }
        
        
        return v[s1.size()][s2.size()];
        
    }
};
